replicaCount: 1
namespace: dev
image:
  repository: node-app
  pullPolicy: IfNotPresent
  tag: "latest"
imagePullSecrets:
  - name: regcred
nameOverride: ""
fullnameOverride: ""
command: []
args: []
lifecycle: {}

secretPath: "/var/www/"
nodeSettings:
  enabled: false
  path: "/var/www/"
deployment:
  updateTimeStamp: ""

envFromSecret:
  enabled: false

envFromDotenv:
  enabled: false

cron:
  enabled: false
  user: "root"

nginx:
  enabled: false
  image:
    repository: nginx
    pullPolicy: IfNotPresent
    tag: "1.25.5"
  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

serviceAccount:
  create: false
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podSecurityContext: {}
  # fsGroup: 2000
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 3000

ingress:
  enabled: true
  className: "nginx"
  annotations:
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: example.com
      paths:
        - path: /
          pathType: Prefix
          svcPort: 3000
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
configs:
  node:
    settings: |

  nginx:
    nginxconf: |-
      include /etc/nginx/modules-enabled/*.conf;
      
      events {
        worker_connections 768;
        # multi_accept on;
      }
      
      http {
        # Basic Settings
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        # server_tokens off;
      
        # server_names_hash_bucket_size 64;
        # server_name_in_redirect off;
      
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
      
        # Logging Settings
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;
      
        # Gzip Settings
        gzip on;
        # gzip_vary on;
        # gzip_proxied any;
        # gzip_comp_level 6;
        # gzip_buffers 16 8k;
        # gzip_http_version 1.1;
        # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
      
        # Virtual Host Configs
        include /etc/nginx/conf.d/*.conf;
        include /etc/nginx/sites-enabled/*;
      }

    nginxdefaultconf: |-
      server {
        listen 80;
        root /var/www;
    
        location / {
            # try to serve file directly, fallback to index.php
            try_files $uri /index.php$is_args$args;
        }
    
        # optionally disable falling back to PHP script for the asset directories;
        # nginx will return a 404 error when files are not found instead of passing the
        # request to Symfony (improves performance but Symfony's 404 page is not displayed)
        # location /bundles {
        #     try_files $uri =404;
        # }
    
        location ~ ^/index\.php(/|$) {
    
         if ($request_method = OPTIONS) {
             add_header Access-Control-Allow-Origin '*';
             add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS, PATCH, DELETE';
             add_header Content-Type text/plain;
             add_header Content-Length 0;
             add_header Access-Control-Allow-Headers '*';
             return 204;
         }
            # when using PHP-FPM as a unix socket
            # fastcgi_pass php82-service:9000;
    
            # when PHP-FPM is configured to use TCP
            # fastcgi_pass 127.0.0.1:9000;
            fastcgi_pass 127.0.0.1:3000;
    
            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            include fastcgi_params;
    
            # optionally set the value of the environment variables used in the application
            # fastcgi_param APP_ENV prod;
            # fastcgi_param APP_SECRET <app-secret-id>;
            # fastcgi_param DATABASE_URL "mysql://db_user:db_pass@host:3306/db_name";
    
            # When you are using symlinks to link the document root to the
            # current version of your application, you should pass the real
            # application path instead of the path to the symlink to PHP
            # FPM.
            # Otherwise, PHP's OPcache may not properly detect changes to
            # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
            # for more information).
            # Caveat: When PHP-FPM is hosted on a different machine from nginx
            #         $realpath_root may not resolve as you expect! In this case try using
            #         $document_root instead.
            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            fastcgi_param DOCUMENT_ROOT $realpath_root;
            # Prevents URIs that include the front controller. This will 404:
            # http://example.com/index.php/some-path
            # Remove the internal directive to allow URIs like this
            internal;
        }
    
        # return 404 for all other php files not matching the front controller
        # this prevents access to other php files you don't want to be accessible.
        location ~ \.php$ {
            return 404;
        }
    
      #    error_log /var/log/nginx/project_error.log;
      #    access_log /var/log/nginx/project_access.log;
      }

    fastcgisnippets: |-
      # regex to split $uri to $fastcgi_script_name and $fastcgi_path
      fastcgi_split_path_info ^(.+?\.php)(/.*)$;
      
      # Check that the PHP script exists before passing it
      try_files $fastcgi_script_name =404;
      
      # Bypass the fact that try_files resets $fastcgi_path_info
      # see: http://trac.nginx.org/nginx/ticket/321
      set $path_info $fastcgi_path_info;
      fastcgi_param PATH_INFO $path_info;
      
      fastcgi_index index.php;
      include fastcgi.conf;
    fastcgiconf: |-
      fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;
      fastcgi_param  QUERY_STRING       $query_string;
      fastcgi_param  REQUEST_METHOD     $request_method;
      fastcgi_param  CONTENT_TYPE       $content_type;
      fastcgi_param  CONTENT_LENGTH     $content_length;
      
      fastcgi_param  SCRIPT_NAME        $fastcgi_script_name;
      fastcgi_param  REQUEST_URI        $request_uri;
      fastcgi_param  DOCUMENT_URI       $document_uri;
      fastcgi_param  DOCUMENT_ROOT      $document_root;
      fastcgi_param  SERVER_PROTOCOL    $server_protocol;
      fastcgi_param  REQUEST_SCHEME     $scheme;
      fastcgi_param  HTTPS              $https if_not_empty;
      
      fastcgi_param  GATEWAY_INTERFACE  CGI/1.1;
      fastcgi_param  SERVER_SOFTWARE    nginx/$nginx_version;
      
      fastcgi_param  REMOTE_ADDR        $remote_addr;
      fastcgi_param  REMOTE_PORT        $remote_port;
      fastcgi_param  SERVER_ADDR        $server_addr;
      fastcgi_param  SERVER_PORT        $server_port;
      fastcgi_param  SERVER_NAME        $server_name;
      
      # PHP only, required if PHP was built with --enable-force-cgi-redirect
      fastcgi_param  REDIRECT_STATUS    200;

  crontab: |


autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}
tolerations: []
affinity: {}
